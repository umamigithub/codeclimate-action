name: "Release"
on:
  push:
    branches:
      - main
    tags:
      - '!*'

jobs:
  next-version:
    name: Get next release version
    runs-on: ubuntu-latest
    outputs:
      git-tag: ${{ steps.git-tag.outputs.git-tag }}
      new-release-version: ${{ steps.next-version.outputs.new-release-version }}
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: install dependencies
        run: npm ci

      - name: find current latest release version
        id: git-tag
        shell: bash
        run: echo "git-tag=`echo $(git describe --tags --abbrev=0 | sed -e 's/^v//')`" >> $GITHUB_OUTPUT

      - name: find next release version
        id: next-version
        run: npm_config_yes=true npx semantic-release --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_PERSONAL_TOKEN }}

  release:
    name: Cut a release on GitHub
    runs-on: ubuntu-latest
    needs: next-version
    if: needs.next-version.outputs.new-release-version == needs.next-version.outputs.git-tag
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: install dependencies
        run: npm ci

      - name: make a release on GitHub
        run: npm_config_yes=true npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_PERSONAL_TOKEN }}
          GIT_AUTHOR_NAME: 'GP'
          GIT_COMMITTER_NAME: 'GP'
          GIT_AUTHOR_EMAIL: 'me@httgp.com'
          GIT_COMMITTER_EMAIL: 'me@httgp.com'
